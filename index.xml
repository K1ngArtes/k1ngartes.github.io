<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Artur Romanov Blog</title><link>https://k1ngartes.github.io/</link><description>Recent content on Artur Romanov Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://k1ngartes.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>On writing</title><link>https://k1ngartes.github.io/posts/on-writing/</link><pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate><guid>https://k1ngartes.github.io/posts/on-writing/</guid><description>I always come back to writing—not the writing you do at school or in formal emails, but the writing you do on your terms.
At the age of 13, I was cultivating the idea of being an author. I vividly remember a green notebook that I used to write my first stories. I would write a chapter and then hand-copy pictures of knights in shiny armour from the history books. The notebook is long lost among boxes in my parents&amp;rsquo; basement, but the memory lives on.</description></item><item><title>Functional Options Pattern In Go</title><link>https://k1ngartes.github.io/posts/functional-options-pattern-in-go/</link><pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate><guid>https://k1ngartes.github.io/posts/functional-options-pattern-in-go/</guid><description>I recently became increasingly frustrated with how I deal with optional configurations in my Go apps. Imagine that we are making a server constructor NewServer and want to allow clients to provide optional configuration values or otherwise use defaults. Usually, I pass a configuration struct on autopilot without too much thinking and call it a day. Usually it ends up looking like this
type Config struct { Port int Timeout time.</description></item><item><title>I've joined Clustr</title><link>https://k1ngartes.github.io/posts/27-07-2023-i-have-joined-clustr/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate><guid>https://k1ngartes.github.io/posts/27-07-2023-i-have-joined-clustr/</guid><description>My idea with Tiny Projects didn’t go according to plan. Sometime in March, Tim, who I played football with back in Manchester, approached me and proposed to join his startup. We have never been close and haven’t spoken since my uni years, so I was both surprised and flattered to be contacted.
Oh no, is it&amp;hellip; crypto? The project is called Clustr. It is a crypto/web3 project. Not something I am fond of, I will be honest.</description></item><item><title>Tiny projects</title><link>https://k1ngartes.github.io/posts/tiny-projects/</link><pubDate>Thu, 19 Jan 2023 21:44:59 +0000</pubDate><guid>https://k1ngartes.github.io/posts/tiny-projects/</guid><description>I first encountered the idea of Tiny Projects in the TinyWebsite. The concept that sounded strange at first occupied my mind for days - what if I could set myself to deliver the project every couple of months without worrying about it being perfect? Unfortunately, I have always struggled to see my creations make it to production; it&amp;rsquo;s always &amp;ldquo;one more feature&amp;rdquo; or &amp;ldquo;one more bug to fix&amp;rdquo;. Following the &amp;ldquo;tiny&amp;rdquo; methodology is an attempt to overcome those mental blocks, see my projects graduate the incubator stage, and learn something new.</description></item></channel></rss>